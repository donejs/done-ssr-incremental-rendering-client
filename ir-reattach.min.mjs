const Instructions={Zero:0,Insert:1,Remove:2,Move:3,Text:4,SetAttr:5,RemoveAttr:6,Prop:7};var doneMutation_3_1_0_tags=Instructions,decodeNode_1=decodeNode,decodeString_1=decodeString,decodeType_1=decodeType,toUint16_1=toUint16,next_1=next;function*next(a){let b=a.iter,c=b.next();if(c.done){let b=yield;return a.iter=b[Symbol.iterator](),yield*next(a)}return c.value}function*toUint16(a){let b=yield*next(a),c=yield*next(a);return(255&b)<<8|255&c}const decoder=new TextDecoder;function*decodeString(a){let b=yield*toUint16(a),c=new Uint8Array(b);for(let d=0;d<b;d++)c[d]=yield*next(a);return decoder.decode(c)}function*decodeType(a){let b=yield*next(a);switch(b){case 1:return!!(yield*next(a));case 2:return+(yield*next(a));case 3:return yield*decodeString(a);default:throw new Error(`The type ${b} is not recognized.`);}}function*decodeNode(a,b,c){switch(b){case 3:return c.createTextNode((yield*decodeString(a)));case 1:return yield*decodeElement(a,c);case 8:return c.createComment((yield*decodeString(a)));default:throw new Error(`Unable to decode nodeType ${b}`);}}function*decodeElement(a,b){let c=b.createElement((yield*decodeString(a))),d=yield*toUint16(a);for(let e=0;e<d;e++){let b=yield*decodeString(a),d=yield*decodeString(a);c.setAttribute(b,d)}let e=c,f=yield*next(a);if(f)for(let c,d=yield*next(a);d!==doneMutation_3_1_0_tags.Zero;)c=yield*decodeNode(a,d,b),e.appendChild(c),d=yield*next(a);return c}var doneMutation_3_1_0_decode={decodeNode:decodeNode_1,decodeString:decodeString_1,decodeType:decodeType_1,toUint16:toUint16_1,next:next_1};const{decodeNode:decodeNode$1,decodeString:decodeString$1,decodeType:decodeType$1,toUint16:toUint16$1,next:next$1}=doneMutation_3_1_0_decode;function sepNode(a){return 8===a.nodeType&&"__DONEJS-SEP__"===a.nodeValue}function*walk(a,b){const c=getDocument(a),d=c.createTreeWalker(a,-1);let e=0,f=d.nextNode();for(;;)if(e===b)b=yield f;else if(!(e<b))e--,f=d.previousNode();else if(e++,f=d.nextNode(),sepNode(f)){var g=f;f=d.nextNode(),g.parentNode.removeChild(g)}}function getDocument(a){return 9===a.nodeType?a:a.ownerDocument}class MutationPatcher{constructor(a){this.root=a,this._startWalker(),this._operation=null}_startWalker(){this.walker=walk(this.root,0),this.walker.next()}patch(a){this._operation||(this._operation=this._patch(a)),this._operation.next(a)}*_patch(a){this.iter=a[Symbol.iterator]();const b=this.root,c=getDocument(b);for(;;){let a,b,d,e,f=yield*next$1(this);switch(f){case doneMutation_3_1_0_tags.Zero:break;case doneMutation_3_1_0_tags.Insert:a=yield*toUint16$1(this),b=yield*toUint16$1(this);let g=yield*next$1(this);e=yield*decodeNode$1(this,g,c);let h=this.walker.next(a).value,i=getChild(h,b);h.insertBefore(e,i);break;case doneMutation_3_1_0_tags.Remove:a=yield*toUint16$1(this);let j=yield*toUint16$1(this),k=this.walker.next(a).value;e=getChild(k,j),k.removeChild(e),this._startWalker();break;case doneMutation_3_1_0_tags.Text:a=yield*toUint16$1(this);let l=yield*decodeString$1(this);d=this.walker.next(a).value,d.nodeValue=l;break;case doneMutation_3_1_0_tags.SetAttr:a=yield*toUint16$1(this),d=this.walker.next(a).value;let m=yield*decodeString$1(this),n=yield*decodeString$1(this);d.setAttribute(m,n);break;case doneMutation_3_1_0_tags.RemoveAttr:a=yield*toUint16$1(this),d=this.walker.next(a).value,d.removeAttribute((yield*decodeString$1(this)));break;case doneMutation_3_1_0_tags.Prop:{a=yield*toUint16$1(this),d=this.walker.next(a).value;let b=yield*decodeString$1(this),c=yield*decodeType$1(this);d[b]=c}break;default:throw new Error(`The instruction ${f} is not supported.`);}}}}function getChild(a,b){let c=0,d=a.firstChild;for(;c<b;)if(c++,d=d.nextSibling,d&&sepNode(d)){var e=d;d=d.nextSibling,e.parentNode.removeChild(e)}return d}var doneMutation_3_1_0_patch=MutationPatcher,isAttached=function(){return document.documentElement.hasAttribute("data-attached")},common={isAttached:isAttached};const isAttached$1=common.isAttached;async function read(a,b){let{done:c,value:d}=await a.read();return!(c||isAttached$1())&&(b.patch(d),!0)}async function incrementallyRender({fetch:a,url:b,onStart:c}){let d=await a(b,{crendentials:"same-origin"}),e=d.body.getReader(),f=new doneMutation_3_1_0_patch(document);for(await read(e,f),c();await read(e,f););}var render=incrementallyRender;const isAttached$2=common.isAttached;function depth(a){let b=0,c=document.createTreeWalker(a,4294967295,{acceptNode:function(a){let b=a.nodeType;return 1===b||3===b}});for(;c.nextNode();)b++;return b}function reattach(a,b){let c=new MutationObserver(function(){let d=depth(document.documentElement),e=depth(a.documentElement),f=isAttached$2();f||(f=d<=e),f&&(c.disconnect(),!isAttached$2()&&(document.documentElement.setAttribute("data-attached",""),b()))});c.observe(a,{childList:!0,subtree:!0})}var reattach_1=reattach;const url=document.documentElement.dataset.streamurl;function removeSelf(){let a=window.parent;a.closeSsrIframe&&a.closeSsrIframe()}render({fetch,url,onStart:()=>{reattach_1(window.parent.document,removeSelf)}});var irReattach={};export default irReattach;